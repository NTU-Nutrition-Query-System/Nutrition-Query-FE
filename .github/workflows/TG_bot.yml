name: notify TG while push
on: 
  push:
    branches:
      - 'main'
      - 'hot-fix**'
jobs:
  npm-build:
    runs-on: ubuntu-latest
    outputs:
      build_result: ${{ steps.build_step.outputs.result }}
    steps:
      - uses: actions/checkout@v4
    
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.20.4
      
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install
      - name: Build
        id: build_step
        run: |
          npm run build
          echo "result=✅success" >> $GITHUB_OUTPUT
        continue-on-error: true
  notify-TG:
    needs: npm-build
    runs-on: ubuntu-latest
    steps:
      - name: notify TG
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TG_BOT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          message: |

            ${{ github.actor }} pushed to ${{ github.ref }}:
                        
            ${{ github.event.head_commit.message }}

            Build ${{ needs.npm-build.outputs.build_result || '❌failed' }}
